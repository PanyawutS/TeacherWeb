{"version":3,"sources":["services/firebase.js","services/classroomService.js","components/ClassroomList.js","pages/Dashboard.js","components/QRCodeGenerator.js","components/AddStudent.js","pages/Classroom.js","pages/Checkin.js","services/checkinService.js","pages/Login.js","pages/Profile.js","pages/Question.js","pages/CheckinDetail.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","createClassroom","async","uid","subjectCode","subjectName","photoURL","roomName","cid","Math","random","toString","substring","toUpperCase","classroomRef","doc","userRef","userDoc","getDoc","ownerName","exists","data","name","classroomData","owner","info","code","photo","room","setDoc","updateDoc","status","email","classroom","error","console","deleteClassroom","classroomPath","subcollections","subcollection","subcollectionRef","collection","parentDocPath","getDocs","forEach","deleteDoc","ref","deleteSubcollections","updatedClassrooms","log","ClassroomList","_ref","onEdit","onDelete","classrooms","setClassrooms","useState","navigate","useNavigate","useEffect","classroomsRef","q","query","where","unsubscribe","onSnapshot","snapshot","docs","map","id","React","createElement","className","length","key","src","alt","onClick","Dashboard","user","setUser","userData","setUserData","setSubjectCode","setSubjectName","setRoomName","setPhotoURL","editingClassroom","setEditingClassroom","onAuthStateChanged","resetForm","Fragment","split","type","placeholder","value","onChange","e","target","updatedData","updateClassroom","alert","window","confirm","signOut","QRCodeGenerator","cno","loading","setLoading","docRef","fetchClassroom","qrValue","QRCode","size","AddStudent","studentId","setStudentId","studentName","setStudentName","studentRef","stdid","Classroom","_classroom$info","_classroom$info2","_classroom$info3","_classroom$info4","useParams","setClassroom","students","setStudents","docSnap","studentsRef","style","minHeight","padding","Link","to","student","handleDeleteStudent","Checkin","classroomInfo","setClassroomInfo","checkinHistory","setCheckinHistory","selectedCno","setSelectedCno","showQR","setShowQR","fetchClassroomInfo","checkinRef","history","parseInt","replace","sort","a","b","newCno","empty","cnoList","filter","num","isNaN","max","newCheckinId","newCheckinRef","checkinData","Date","now","date","toISOString","createCheckin","disabled","checkin","index","toLocaleDateString","toLocaleTimeString","openCheckin","closeCheckin","deleteCheckin","Login","setEmail","password","setPassword","setError","onSubmit","preventDefault","signInWithEmailAndPassword","err","message","required","provider","GoogleAuthProvider","signInWithPopup","width","height","xmlns","viewBox","fill","d","href","Profile","setName","setPhoto","currentUser","userSnap","fetchUserData","reload","delete","Question","questionList","setQuestionList","questionText","setQuestionText","selectedQuestionNo","setSelectedQuestionNo","answers","setAnswers","nextQuestionNo","setNextQuestionNo","questionRef","questions","question_no","Number","answersRef","String","_data$time","student_name","text","time","toDate","toLocaleString","trim","question_text","question_show","qno","isShowing","handleToggleQuestion","handleDeleteQuestion","answer","CheckinDetail","checkinInfo","setCheckinInfo","checkinSnap","fetchCheckinData","unsubscribeStudents","_data$checkinTime","checkinTime","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f54be5ef.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD8oF--DbGjeAeaoOD_zWd22ZuoxhnezzM\",\r\n    authDomain: \"project-web2024.firebaseapp.com\",\r\n    projectId: \"project-web2024\",\r\n    storageBucket: \"project-web2024.appspot.com\",\r\n    messagingSenderId: \"702664470322\",\r\n    appId: \"1:702664470322:web:9d9af9fc2d251b8f6e312b\",\r\n    measurementId: \"G-PD47D82DBR\"\r\n};\r\n\r\n// สร้าง Firebase App\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// ใช้งาน Firebase Auth และ Firestore\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\n\r\nexport { auth, db, app };\r\n","import { db } from \"./firebase\";\r\nimport { \r\n  doc, setDoc, updateDoc, getDoc, deleteDoc, collection, getDocs \r\n} from \"firebase/firestore\";\r\n\r\n/**  ฟังก์ชันสุ่มรหัส 6 ตัว */\r\nconst generateRandomCID = () => {\r\n  return Math.random().toString(36).substring(2, 8).toUpperCase(); \r\n};\r\n\r\n/**  ฟังก์ชันลบคอลเลกชันย่อยทั้งหมด */\r\nconst deleteSubcollections = async (parentDocPath) => {\r\n  const subcollections = [\"checkin\", \"students\", \"question\"]; //  ระบุคอลเลกชันย่อยที่ต้องการลบ\r\n  try {\r\n    for (const subcollection of subcollections) {\r\n      const subcollectionRef = collection(db, `${parentDocPath}/${subcollection}`);\r\n      const snapshot = await getDocs(subcollectionRef);\r\n      snapshot.forEach(async (doc) => {\r\n        await deleteDoc(doc.ref);\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error deleting subcollections in ${parentDocPath}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**  ฟังก์ชันสร้างห้องเรียนใหม่ */\r\nexport const createClassroom = async (uid, subjectCode, subjectName, photoURL, roomName) => {\r\n  try {\r\n    const cid = generateRandomCID(); //  สร้างรหัสสุ่ม 6 ตัว\r\n    const classroomRef = doc(db, \"classroom\", cid);\r\n\r\n    //  ตรวจสอบว่า users/{uid} มีอยู่หรือไม่ และดึงชื่อเจ้าของ\r\n    const userRef = doc(db, \"users\", uid);\r\n    const userDoc = await getDoc(userRef);\r\n\r\n    let ownerName = \"ไม่ทราบชื่อ\"; // ค่าเริ่มต้นหากไม่พบชื่อ\r\n\r\n    if (userDoc.exists()) {\r\n      const userData = userDoc.data();\r\n      ownerName = userData.name || \"ไม่ทราบชื่อ\"; // ใช้ชื่อจาก Firestore ถ้ามี\r\n    }\r\n\r\n    const classroomData = {\r\n      owner: ownerName, //  เก็บชื่อแทน UID\r\n      info: {\r\n        code: subjectCode,\r\n        name: subjectName,\r\n        photo: photoURL || \"\",\r\n        room: roomName,\r\n      },\r\n    };\r\n\r\n    await setDoc(classroomRef, classroomData);\r\n\r\n    //  เพิ่มข้อมูลห้องเรียนใน users/{uid}/classroom\r\n    if (userDoc.exists()) {\r\n      await updateDoc(userRef, {\r\n        [`classroom.${cid}`]: { status: 1 },\r\n      });\r\n    } else {\r\n      await setDoc(userRef, {\r\n        name: ownerName,\r\n        email: \"\",\r\n        photo: \"\",\r\n        classroom: {\r\n          [cid]: { status: 1 },\r\n        },\r\n      });\r\n    }\r\n\r\n    return cid;\r\n  } catch (error) {\r\n    console.error(\"Error creating classroom:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**  ฟังก์ชันแก้ไขข้อมูลห้องเรียน */\r\nexport const updateClassroom = async (cid, updatedData) => {\r\n  try {\r\n    const classroomRef = doc(db, \"classroom\", cid);\r\n    await updateDoc(classroomRef, { info: updatedData });\r\n  } catch (error) {\r\n    console.error(\"Error updating classroom:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**  ฟังก์ชันลบห้องเรียน */\r\nexport const deleteClassroom = async (cid, uid) => {\r\n  try {\r\n    const classroomPath = `classroom/${cid}`;\r\n\r\n    //  ลบคอลเลกชันย่อยก่อน\r\n    await deleteSubcollections(classroomPath);\r\n\r\n    //  ลบเอกสารห้องเรียน\r\n    await deleteDoc(doc(db, classroomPath));\r\n\r\n    //  ลบห้องเรียนออกจาก users/{uid}/classroom\r\n    const userRef = doc(db, \"users\", uid);\r\n    const userDoc = await getDoc(userRef);\r\n\r\n    if (userDoc.exists()) {\r\n      const userData = userDoc.data();\r\n      const updatedClassrooms = { ...userData.classroom };\r\n      delete updatedClassrooms[cid];\r\n\r\n      await updateDoc(userRef, { classroom: updatedClassrooms });\r\n    }\r\n\r\n    console.log(`ห้องเรียน ${cid} และคอลเลกชันย่อยถูกลบเรียบร้อยแล้ว`);\r\n  } catch (error) {\r\n    console.error(\"Error deleting classroom:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../services/firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { collection, query, where, onSnapshot } from \"firebase/firestore\";\r\nimport { updateClassroom, deleteClassroom } from \"../services/classroomService\";\r\nimport \"../styles/ClassroomList.css\";\r\n\r\nconst ClassroomList = ({ ownerName, onEdit, onDelete }) => {\r\n  const [classrooms, setClassrooms] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!ownerName) return;\r\n\r\n    const classroomsRef = collection(db, \"classroom\");\r\n    const q = query(classroomsRef, where(\"owner\", \"==\", ownerName));\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      setClassrooms(snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [ownerName]);\r\n\r\n  return (\r\n    <div className=\"classroom-grid\">\r\n      {classrooms.length > 0 ? (\r\n        classrooms.map((classroom) => (\r\n          <div key={classroom.id} className=\"classroom-card\">\r\n            <img\r\n              src={classroom.info.photo || \"https://via.placeholder.com/300x150\"}\r\n              alt={classroom.info.name}\r\n              className=\"classroom-image\"\r\n            />\r\n            <div className=\"classroom-content\">\r\n              <h3>{classroom.info.name}</h3>\r\n              <p>รหัสวิชา: {classroom.info.code}</p>\r\n              <p>ห้อง: {classroom.info.room}</p>\r\n              <div className=\"button-group\">\r\n                <button onClick={() => navigate(`/classroom/${classroom.id}`)} className=\"view-button\">\r\n                  ดูรายละเอียด\r\n                </button>\r\n                <button onClick={() => onEdit(classroom)} className=\"edit-button\">\r\n                  แก้ไข\r\n                </button>\r\n                <button onClick={() => onDelete(classroom.id)} className=\"delete-button\">\r\n                  ลบ\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p className=\"no-classroom-message\">ยังไม่มีห้องเรียน</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassroomList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { auth, db } from \"../services/firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ClassroomList from \"../components/ClassroomList\";\r\nimport { createClassroom, updateClassroom, deleteClassroom } from \"../services/classroomService\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport \"../styles/Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [userData, setUserData] = useState(null);\r\n  const [subjectCode, setSubjectCode] = useState(\"\");\r\n  const [subjectName, setSubjectName] = useState(\"\");\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [photoURL, setPhotoURL] = useState(\"\");\r\n  const [editingClassroom, setEditingClassroom] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  /**  โหลดข้อมูลผู้ใช้ */\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        const userRef = doc(db, \"users\", user.uid);\r\n        const userDoc = await getDoc(userRef);\r\n        if (userDoc.exists()) {\r\n          setUserData(userDoc.data());\r\n        }\r\n      } else {\r\n        navigate(\"/login\");\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [navigate]);\r\n\r\n  /**  สร้างห้องเรียนใหม่ */\r\n  const handleCreateClassroom = async () => {\r\n    if (!user || !subjectCode || !subjectName || !roomName) {\r\n      alert(\"กรุณากรอกข้อมูลให้ครบ\");\r\n      return;\r\n    }\r\n    try {\r\n      const cid = await createClassroom(user.uid, subjectCode, subjectName, photoURL, roomName);\r\n      alert(`สร้างห้องเรียนสำเร็จ รหัสห้องเรียน: ${cid}`);\r\n      resetForm();\r\n    } catch (error) {\r\n      alert(\"ไม่สามารถสร้างห้องเรียนได้\");\r\n    }\r\n  };\r\n\r\n  /**  แก้ไขห้องเรียน */\r\n  const handleEditClassroom = async () => {\r\n    if (!editingClassroom) return;\r\n    try {\r\n      await updateClassroom(editingClassroom.id, {\r\n        code: subjectCode,\r\n        name: subjectName,\r\n        photo: photoURL,\r\n        room: roomName,\r\n      });\r\n      alert(\"อัปเดตห้องเรียนเรียบร้อย\");\r\n      resetForm();\r\n    } catch (error) {\r\n      alert(\"ไม่สามารถอัปเดตห้องเรียนได้\");\r\n    }\r\n  };\r\n\r\n  /**  ลบห้องเรียน */\r\n  const handleDeleteClassroom = async (cid) => {\r\n    if (!window.confirm(\"คุณแน่ใจหรือไม่ว่าต้องการลบห้องเรียนนี้\")) return;\r\n    try {\r\n      await deleteClassroom(cid, user.uid);\r\n      alert(\"ลบห้องเรียนสำเร็จ\");\r\n    } catch (error) {\r\n      alert(\"ไม่สามารถลบห้องเรียนได้\");\r\n    }\r\n  };\r\n  \r\n\r\n  /**  เลือกห้องเรียนที่ต้องการแก้ไข */\r\n  const handleSelectClassroom = (classroom) => {\r\n    setEditingClassroom(classroom);\r\n    setSubjectCode(classroom.info.code);\r\n    setSubjectName(classroom.info.name);\r\n    setRoomName(classroom.info.room);\r\n    setPhotoURL(classroom.info.photo);\r\n  };\r\n\r\n  /**  รีเซ็ตฟอร์ม */\r\n  const resetForm = () => {\r\n    setSubjectCode(\"\");\r\n    setSubjectName(\"\");\r\n    setRoomName(\"\");\r\n    setPhotoURL(\"\");\r\n    setEditingClassroom(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/*  ส่วนโปรไฟล์ผู้ใช้ */}\r\n      {user && userData && (\r\n        <>\r\n          <div className=\"profile-card\">\r\n            <img src={userData?.photo || \"https://via.placeholder.com/80\"} alt=\"Profile\" />\r\n            <div>\r\n              <h2>สวัสดี, {userData?.name || user.email.split(\"@\")[0]}</h2>\r\n              <p>{user.email}</p>\r\n              <button onClick={() => navigate(\"/profile\")}>แก้ไขข้อมูลส่วนตัว</button>\r\n            </div>\r\n          </div>\r\n\r\n          <h1>แดชบอร์ด</h1>\r\n\r\n          {/*  ฟอร์มเพิ่ม/แก้ไขห้องเรียน */}\r\n          <div className=\"form-container\">\r\n            <h2>{editingClassroom ? \"แก้ไขห้องเรียน\" : \"เพิ่มห้องเรียน\"}</h2>\r\n            <input type=\"text\" placeholder=\"รหัสวิชา\" value={subjectCode} onChange={(e) => setSubjectCode(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"ชื่อวิชา\" value={subjectName} onChange={(e) => setSubjectName(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"ชื่อห้องเรียน\" value={roomName} onChange={(e) => setRoomName(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"URL รูปภาพ\" value={photoURL} onChange={(e) => setPhotoURL(e.target.value)} />\r\n\r\n            {editingClassroom ? (\r\n              <div className=\"mt-3 flex space-x-2\">\r\n                <button onClick={handleEditClassroom} className=\"edit-button\">บันทึกการแก้ไข</button>\r\n                <button onClick={resetForm} className=\"cancel-button\">ยกเลิก</button>\r\n              </div>\r\n            ) : (\r\n              <button onClick={handleCreateClassroom} className=\"create-button\">เพิ่มห้องเรียน</button>\r\n            )}\r\n          </div>\r\n\r\n          {/*  รายชื่อห้องเรียน */}\r\n          <ClassroomList\r\n            ownerName={userData.name}\r\n            onEdit={handleSelectClassroom}\r\n            onDelete={handleDeleteClassroom}\r\n          />\r\n\r\n          {/*  ปุ่มออกจากระบบ */}\r\n          <button onClick={() => auth.signOut()} className=\"logout-button\">ออกจากระบบ</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport QRCode from \"react-qr-code\";\r\nimport { db } from \"../services/firebase\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\nconst QRCodeGenerator = ({ cid, cno, type }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchClassroom = async () => {\r\n      if (!cid) return;\r\n      try {\r\n        const docRef = doc(db, \"classroom\", cid);\r\n        const docSnap = await getDoc(docRef);\r\n        if (!docSnap.exists()) {\r\n          console.error(\"❌ ไม่พบข้อมูลห้องเรียน\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"⚠️ เกิดข้อผิดพลาดในการดึงข้อมูล:\", error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchClassroom();\r\n  }, [cid]);\r\n\r\n  // ✅ กำหนดค่า QR Code:\r\n  // - \"cid\" สำหรับเข้าห้องเรียน\r\n  // - \"cid/cno\" สำหรับเช็คชื่อ\r\n  const qrValue = type === \"checkin\" && cno ? `${cid}/${cno}` : cid;\r\n\r\n  return (\r\n    <div className=\"qr-container\">\r\n      <h2 className=\"qr-title\">\r\n        {type === \"classroom\" ? \"QR Code สำหรับเข้าห้องเรียน\" : \"QR Code เช็คชื่อ\"}\r\n      </h2>\r\n      <div className=\"qr-box\">\r\n        {loading ? (\r\n          <p>กำลังโหลดข้อมูล...</p>\r\n        ) : qrValue ? (\r\n          <>\r\n            <QRCode value={qrValue} size={200} className=\"qr-code\" />\r\n            {/* <p className=\"qr-code-text\">{qrValue}</p> ✅ แสดงรหัสตรงกับ QR Code */}\r\n          </>\r\n        ) : (\r\n          <p className=\"error-message\">ไม่พบข้อมูลที่ใช้ได้</p>\r\n        )}\r\n      </div>\r\n      <p className=\"qr-description\">\r\n        {type === \"classroom\" ? \"สแกน QR Code เพื่อเข้าห้องเรียน\" : \"สแกน QR Code เพื่อเช็คชื่อ\"}\r\n      </p>\r\n      <p className=\"qr-code-text\">รหัสห้องเรียน: {cid || \"ไม่มีข้อมูล\"}</p>\r\n      {cno && <p className=\"qr-code-text\">รอบเช็คชื่อ: {cno}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodeGenerator;\r\n","import React, { useState } from \"react\";\r\nimport { db } from \"../services/firebase\";\r\nimport { doc, setDoc, collection } from \"firebase/firestore\";\r\n\r\nconst AddStudent = ({ cid }) => {\r\n  const [studentId, setStudentId] = useState(\"\");\r\n  const [studentName, setStudentName] = useState(\"\");\r\n\r\n  const handleAddStudent = async () => {\r\n    if (!studentId || !studentName) return alert(\"กรุณากรอกข้อมูลให้ครบ\");\r\n    try {\r\n      const studentRef = doc(collection(db, `classroom/${cid}/students`));\r\n      await setDoc(studentRef, {\r\n        stdid: studentId,\r\n        name: studentName,\r\n        status: 0, // 0 = ยังไม่อนุมัติ\r\n      });\r\n      alert(\"เพิ่มนักเรียนสำเร็จ!\");\r\n      setStudentId(\"\");\r\n      setStudentName(\"\");\r\n    } catch (error) {\r\n      console.error(\"เกิดข้อผิดพลาด:\", error);\r\n      alert(\"ไม่สามารถเพิ่มนักเรียนได้\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-student-container\">\r\n      <h2 className=\"add-student-title\">เพิ่มนักเรียน</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"รหัสนักเรียน\"\r\n        value={studentId}\r\n        onChange={(e) => setStudentId(e.target.value)}\r\n        className=\"add-student-input\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"ชื่อนักเรียน\"\r\n        value={studentName}\r\n        onChange={(e) => setStudentName(e.target.value)}\r\n        className=\"add-student-input\"\r\n      />\r\n      <button onClick={handleAddStudent} className=\"add-student-button\">\r\n        เพิ่มนักเรียน\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStudent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../services/firebase\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { doc, getDoc, collection, onSnapshot, deleteDoc } from \"firebase/firestore\";\r\nimport QRCodeGenerator from \"../components/QRCodeGenerator\";\r\nimport AddStudent from \"../components/AddStudent\";\r\nimport \"../styles/Classroom.css\";\r\n\r\nconst Classroom = () => {\r\n  const { cid } = useParams();\r\n  const [classroom, setClassroom] = useState(null);\r\n  const [students, setStudents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchClassroom = async () => {\r\n      const classroomRef = doc(db, \"classroom\", cid);\r\n      const docSnap = await getDoc(classroomRef);\r\n\r\n      if (docSnap.exists()) {\r\n        setClassroom(docSnap.data());\r\n      } else {\r\n        console.log(\"ไม่มีข้อมูลห้องเรียนนี้\");\r\n      }\r\n    };\r\n    fetchClassroom();\r\n  }, [cid]);\r\n\r\n  useEffect(() => {\r\n    if (!cid) return;\r\n\r\n    const studentsRef = collection(db, \"classroom\", cid, \"students\");\r\n    const unsubscribe = onSnapshot(studentsRef, (snapshot) => {\r\n      setStudents(snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\r\n    });\r\n    return () => unsubscribe();\r\n  }, [cid]);\r\n\r\n  const handleDeleteStudent = async (studentId) => {\r\n    if (window.confirm(\"คุณแน่ใจหรือไม่ว่าต้องการลบนักเรียนคนนี้?\")) {\r\n      try {\r\n        await deleteDoc(doc(db, \"classroom\", cid, \"students\", studentId));\r\n        alert(\"ลบนักเรียนสำเร็จ!\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting student:\", error);\r\n        alert(\"ไม่สามารถลบนักเรียนได้\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"classroom-container\" style={{\r\n      minHeight: \"100vh\",\r\n      padding: \"20px\"\r\n    }}>\r\n      {classroom ? (\r\n        <>\r\n          <div className=\"classroom-header\">\r\n            <img src={classroom.info?.photo || \"default_classroom.jpg\"} alt=\"classroom\" className=\"classroom-image\" />\r\n            <div className=\"classroom-info\">\r\n              <h1 className=\"classroom-title\">{classroom.info?.name || \"ไม่มีชื่อวิชา\"}</h1>\r\n              <p className=\"classroom-code\">รหัสวิชา: {classroom.info?.code || \"ไม่มีรหัสวิชา\"}</p>\r\n              <p>ห้องเรียน: {classroom.info?.room || \"ไม่มีข้อมูลห้องเรียน\"}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <Link to={`/classroom/${cid}/checkin`} className=\"checkin-button\">ไปที่หน้าเช็คชื่อ</Link>\r\n          \r\n          <div className=\"qr-box\">\r\n            <QRCodeGenerator cid={cid} type=\"classroom\" />\r\n          </div>\r\n\r\n          <div className=\"add-student-container\">\r\n            <AddStudent cid={cid} />\r\n          </div>\r\n\r\n          <div className=\"student-list\">\r\n            <h2>รายชื่อนักเรียน</h2>\r\n            {students.length > 0 ? (\r\n              <ul>\r\n                {students.map((student) => (\r\n                  <li key={student.id} className=\"student-item\">\r\n                    <span>{student.stdid} - {student.name}</span>\r\n                    <button className=\"student-delete-btn\" onClick={() => handleDeleteStudent(student.id)}>ลบ</button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>ยังไม่มีนักเรียนในห้องนี้</p>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>กำลังโหลดข้อมูล...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Classroom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { collection, doc, getDoc, onSnapshot, deleteDoc } from \"firebase/firestore\";\r\nimport { createCheckin, openCheckin, closeCheckin } from \"../services/checkinService\";\r\nimport { db } from \"../services/firebase\";\r\nimport QRCodeGenerator from \"../components/QRCodeGenerator\";\r\nimport \"../styles/Checkin.css\";\r\n\r\nconst Checkin = () => {\r\n  const { cid } = useParams();\r\n  const [classroomInfo, setClassroomInfo] = useState(null); //  ข้อมูลคลาสรูม\r\n  const [checkinHistory, setCheckinHistory] = useState([]);\r\n  const [selectedCno, setSelectedCno] = useState(null);\r\n  const [showQR, setShowQR] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //  ดึงข้อมูลคลาสรูม\r\n  useEffect(() => {\r\n    const fetchClassroomInfo = async () => {\r\n      const classroomRef = doc(db, \"classroom\", cid);\r\n      const docSnap = await getDoc(classroomRef);\r\n\r\n      if (docSnap.exists()) {\r\n        setClassroomInfo(docSnap.data().info);\r\n      } else {\r\n        console.error(\"ไม่พบข้อมูลห้องเรียน\");\r\n      }\r\n    };\r\n\r\n    fetchClassroomInfo();\r\n  }, [cid]);\r\n\r\n  // ✅ ดึงประวัติการเช็คชื่อ\r\n  useEffect(() => {\r\n    const checkinRef = collection(db, \"classroom\", cid, \"checkin\");\r\n    const unsubscribe = onSnapshot(checkinRef, (snapshot) => {\r\n      const history = snapshot.docs\r\n        .map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n          cno: parseInt(doc.id.replace(\"cno\", \"\"), 10) // ดึงเลขรอบออกมา\r\n        }))\r\n        .sort((a, b) => a.cno - b.cno); // เรียงตามเลขรอบ\r\n  \r\n      setCheckinHistory(history);\r\n    });\r\n  \r\n    return () => unsubscribe();\r\n  }, [cid]);\r\n  \r\n\r\n  // สร้างรอบเช็คชื่อใหม่\r\n  const handleCreateCheckin = async () => {\r\n    if (loading) return;\r\n    setLoading(true);\r\n    try {\r\n      const newCno = await createCheckin(cid);\r\n      alert(`✅ สร้างรอบเช็คชื่อใหม่สำเร็จ`);\r\n    } catch (error) {\r\n      console.error(\"❌ Error creating check-in:\", error);\r\n      alert(\"ไม่สามารถสร้างรอบเช็คชื่อได้\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // ลบรอบเช็คชื่อ\r\n  const deleteCheckin = async (cno) => {\r\n    if (window.confirm(\"คุณแน่ใจหรือไม่ว่าต้องการลบรอบเช็คชื่อนี้?\")) {\r\n      try {\r\n        await deleteDoc(doc(db, \"classroom\", cid, \"checkin\", cno));\r\n        alert(\"✅ ลบรอบเช็คชื่อสำเร็จ!\");\r\n      } catch (error) {\r\n        console.error(\"❌ Error deleting check-in:\", error);\r\n        alert(\"ไม่สามารถลบรอบเช็คชื่อได้\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkin-container\">\r\n      {/*  แสดงข้อมูลคลาสรูม */}\r\n      {classroomInfo && (\r\n        <div className=\"classroom-header\">\r\n          <img src={classroomInfo.photo} alt=\"Classroom\" className=\"classroom-image\" />\r\n          <div className=\"classroom-info\">\r\n            <h2 className=\"classroom-code\">{classroomInfo.code}</h2>\r\n            <h3 className=\"classroom-name\">{classroomInfo.name}</h3>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h1 className=\"checkin-title\">หน้าการเช็คชื่อ</h1>\r\n\r\n      <div className=\"menu-container\">\r\n        <button onClick={handleCreateCheckin} className=\"btn btn-new\" disabled={loading}>\r\n          {loading ? \"กำลังสร้าง...\" : \"สร้างรอบเช็คชื่อใหม่\"}\r\n        </button>\r\n      </div>\r\n\r\n      <h2 className=\"checkin-history-title\">ประวัติการเช็คชื่อ</h2>\r\n      <div className=\"checkin-history-list\">\r\n        {checkinHistory.map((checkin, index) => (\r\n          <div \r\n            key={checkin.id} \r\n            className={`checkin-card ${checkin.status === \"open\" ? \"card-open\" : \"card-closed\"}`}\r\n          >\r\n            <div className=\"checkin-header\">\r\n              <p>\r\n                เช็คชื่อรอบที่ {index + 1} วันที่ {new Date(checkin.date).toLocaleDateString()}{\" \"}\r\n                {new Date(checkin.date).toLocaleTimeString()}\r\n              </p>\r\n            </div>\r\n            <div className=\"checkin-body\">\r\n              <div className=\"checkin-buttons\">\r\n                <button onClick={() => openCheckin(cid, checkin.id)} className=\"btn btn-open\">\r\n                  เปิด\r\n                </button>\r\n                <button onClick={() => closeCheckin(cid, checkin.id)} className=\"btn btn-close\">\r\n                  ปิด\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    setSelectedCno(checkin.id);\r\n                    setShowQR(true);\r\n                  }}\r\n                  className=\"btn btn-qrcode\"\r\n                >\r\n                  แสดง QR CODE\r\n                </button>\r\n                <Link to={`/classroom/${cid}/checkin/${checkin.id}`} className=\"btn btn-detail\">\r\n                  ดูรายละเอียด\r\n                </Link>\r\n                <Link to={`/classroom/${cid}/checkin/${checkin.id}/question`} className=\"btn btn-question\">\r\n                  ถามคำถาม\r\n                </Link>\r\n                <button onClick={() => deleteCheckin(checkin.id)} className=\"btn btn-delete\">\r\n                  ลบ\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {showQR && selectedCno && (\r\n        <div className=\"qr-popup\">\r\n          <div className=\"qr-popup-content\">\r\n            <span className=\"qr-close\" onClick={() => setShowQR(false)}>\r\n              &times;\r\n            </span>\r\n            <QRCodeGenerator cid={cid} cno={selectedCno} type=\"checkin\" />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkin;\r\n","import { db } from \"../services/firebase\";\r\nimport { doc, setDoc, updateDoc, deleteDoc, collection, getDocs } from \"firebase/firestore\";\r\n\r\n/**  ฟังก์ชันสร้างรอบเช็คชื่อใหม่ */\r\nexport const createCheckin = async (cid) => {\r\n  try {\r\n    const checkinRef = collection(db, \"classroom\", cid, \"checkin\");\r\n    const snapshot = await getDocs(checkinRef);\r\n\r\n    // ✅ หาค่า cno ล่าสุด และเพิ่ม +1\r\n    let newCno = 1;\r\n    if (!snapshot.empty) {\r\n      const cnoList = snapshot.docs\r\n        .map(doc => parseInt(doc.id.replace(\"cno\", \"\"), 10))\r\n        .filter(num => !isNaN(num));\r\n      if (cnoList.length > 0) {\r\n        newCno = Math.max(...cnoList) + 1;\r\n      }\r\n    }\r\n\r\n    const newCheckinId = `cno${newCno}`;\r\n    const newCheckinRef = doc(checkinRef, newCheckinId);\r\n\r\n    const checkinData = {\r\n      code: `CHK${newCheckinId}${Date.now()}`,\r\n      status: \"closed\", // ปิดเช็คชื่อเริ่มต้น\r\n      date: new Date().toISOString(),\r\n    };\r\n\r\n    await setDoc(newCheckinRef, checkinData);\r\n    console.log(\"✅ Check-in created:\", checkinData);\r\n    return newCheckinId;\r\n  } catch (error) {\r\n    console.error(\"❌ Error creating check-in:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n/** ฟังก์ชันเปิดเช็คชื่อ */\r\nexport const openCheckin = async (cid, cno) => {\r\n  try {\r\n    await updateDoc(doc(db, \"classroom\", cid, \"checkin\", cno), { status: \"open\" });\r\n  } catch (error) {\r\n    console.error(\"Error opening check-in:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**  ฟังก์ชันปิดเช็คชื่อ */\r\nexport const closeCheckin = async (cid, cno) => {\r\n  try {\r\n    await updateDoc(doc(db, \"classroom\", cid, \"checkin\", cno), { status: \"closed\" });\r\n  } catch (error) {\r\n    console.error(\"Error closing check-in:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/** ฟังก์ชันบันทึกการเช็คชื่อนักเรียน */\r\nexport const checkInStudent = async (cid, cno, studentId, studentName) => {\r\n  const studentRef = doc(db, \"classroom\", cid, \"checkin\", cno, \"students\", studentId);\r\n  try {\r\n    const checkinData = {\r\n      name: studentName,\r\n      checkinTime: new Date().toISOString(),\r\n    };\r\n\r\n    await setDoc(studentRef, checkinData);\r\n  } catch (error) {\r\n    console.error(\"Error checking in student:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**  ฟังก์ชันลบนักเรียนออกจากการเช็คชื่อ */\r\nexport const deleteStudent = async (cid, cno, studentId) => {\r\n  try {\r\n    await deleteDoc(doc(db, \"classroom\", cid, \"checkin\", cno, \"students\", studentId));\r\n  } catch (error) {\r\n    console.error(\"Error deleting student:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","// filepath: /d:/File/CS Term 6/MobileWeb/MobileWebProject/Project_WebApp2024/teacher-web/src/pages/Login.js\r\nimport React, { useState } from \"react\";\r\nimport { auth } from \"../services/firebase\";\r\nimport { signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Login.css\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // Login with Email/Password\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Login with Google\r\n  const handleGoogleLogin = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    try {\r\n      await signInWithPopup(auth, provider);\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h1 className=\"login-title\">Login</h1>\r\n        \r\n        {error && <div className=\"login-error\">{error}</div>}\r\n\r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"input-group\">\r\n            <label className=\"input-label\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              className=\"login-input\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"input-group\">\r\n            <label className=\"input-label\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"login-input\"\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"login-button\">\r\n            Login\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"divider\"><span>OR</span></div>\r\n        \r\n        <button\r\n          onClick={handleGoogleLogin}\r\n          className=\"google-button\"\r\n        >\r\n          <svg width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n            <path fill=\"#FFC107\" d=\"M43.611 20.083H42V20H24v8h11.303c-1.649 4.657-6.08 8-11.303 8-6.627 0-12-5.373-12-12s5.373-12 12-12c3.059 0 5.842 1.154 7.961 3.039l5.657-5.657C34.046 6.053 29.268 4 24 4 12.955 4 4 12.955 4 24s8.955 20 20 20 20-8.955 20-20c0-1.341-.138-2.65-.389-3.917z\"/>\r\n            <path fill=\"#FF3D00\" d=\"M6.306 14.691l6.571 4.819C14.655 15.108 18.961 12 24 12c3.059 0 5.842 1.154 7.961 3.039l5.657-5.657C34.046 6.053 29.268 4 24 4 16.318 4 9.656 8.337 6.306 14.691z\"/>\r\n            <path fill=\"#4CAF50\" d=\"M24 44c5.166 0 9.86-1.977 13.409-5.192l-6.19-5.238A11.91 11.91 0 0124 36c-5.202 0-9.619-3.317-11.283-7.946l-6.522 5.025C9.505 39.556 16.227 44 24 44z\"/>\r\n            <path fill=\"#1976D2\" d=\"M43.611 20.083H42V20H24v8h11.303a12.04 12.04 0 01-4.087 5.571l.003-.002 6.19 5.238C36.971 39.205 44 34 44 24c0-1.341-.138-2.65-.389-3.917z\"/>\r\n          </svg>\r\n          Sign in with Google\r\n        </button>\r\n        \r\n        <div className=\"footer-text\">\r\n          Don't have an account? <a href=\"/signup\" className=\"footer-link\">Sign up</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useState } from \"react\";\r\nimport { auth, db } from \"../services/firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { doc, getDoc, setDoc, updateDoc, deleteDoc } from \"firebase/firestore\";\r\nimport \"../styles/Profile.css\";\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!auth.currentUser) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n    setUser(auth.currentUser);\r\n\r\n    const fetchUserData = async () => {\r\n      const userRef = doc(db, \"users\", auth.currentUser.uid);\r\n      const userSnap = await getDoc(userRef);\r\n\r\n      if (userSnap.exists()) {\r\n        const userData = userSnap.data();\r\n        setName(userData.name || \"\");\r\n        setPhoto(userData.photo || \"\");\r\n      } else {\r\n        console.log(\"⚠️ ไม่มีข้อมูลผู้ใช้ใน Firestore\");\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [navigate]);\r\n\r\n  /** ฟังก์ชันบันทึกข้อมูล */\r\n  const handleSaveProfile = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const userRef = doc(db, \"users\", user.uid);\r\n      const userSnap = await getDoc(userRef);\r\n\r\n      if (userSnap.exists()) {\r\n        //  อัปเดตข้อมูลหากมีเอกสารอยู่แล้ว\r\n        await updateDoc(userRef, { name, photo });\r\n      } else {\r\n        //  สร้างเอกสารใหม่หากยังไม่มี\r\n        await setDoc(userRef, { name, photo });\r\n      }\r\n\r\n      alert(\"บันทึกข้อมูลสำเร็จ!\");\r\n    } catch (error) {\r\n      console.error(\"🔥 Error updating profile:\", error);\r\n      alert(\"ไม่สามารถบันทึกข้อมูลได้\");\r\n    }\r\n  };\r\n\r\n  /** ฟังก์ชันลบข้อมูลผู้ใช้ */\r\n  const handleDeleteProfile = async () => {\r\n    if (!window.confirm(\" คุณแน่ใจหรือไม่ว่าต้องการลบบัญชีของคุณ?\")) return;\r\n\r\n    try {\r\n      // รีโหลดผู้ใช้ก่อนการลบ\r\n      await auth.currentUser.reload();\r\n\r\n      // ลบข้อมูลใน Firestore\r\n      await deleteDoc(doc(db, \"users\", user.uid));\r\n\r\n      // ลบบัญชีจาก Firebase Authentication\r\n      await auth.currentUser.delete();\r\n\r\n      alert(\"บัญชีของคุณถูกลบเรียบร้อยแล้ว!\");\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      console.error(\" Error deleting profile:\", error);\r\n      alert(\"ไม่สามารถลบบัญชีได้ โปรดลองใหม่อีกครั้ง\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h1 className=\"profile-title\">แก้ไขข้อมูลส่วนตัว</h1>\r\n\r\n      <div className=\"profile-picture-container\">\r\n        <img\r\n          src={photo || \"https://via.placeholder.com/100\"}\r\n          alt=\"Profile\"\r\n          className=\"profile-image\"\r\n        />\r\n        <div>\r\n          <p className=\"profile-text\">อัปเดตรูปภาพโดยใช้ URL</p>\r\n        </div>\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"ชื่อ\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        className=\"profile-input\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"URL รูปโปรไฟล์\"\r\n        value={photo}\r\n        onChange={(e) => setPhoto(e.target.value)}\r\n        className=\"profile-input\"\r\n      />\r\n\r\n      <button onClick={handleSaveProfile} className=\"save-btn\">\r\n        บันทึกข้อมูล\r\n      </button>\r\n\r\n      <button onClick={handleDeleteProfile} className=\"delete-btn\">\r\n        ลบบัญชีของฉัน\r\n      </button>\r\n\r\n      <button onClick={() => navigate(\"/dashboard\")} className=\"back-btn\">\r\n        กลับหน้าแรก\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { doc, collection, onSnapshot, updateDoc, setDoc, deleteDoc, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../services/firebase\";\r\nimport \"../styles/Question.css\";\r\n\r\nconst Question = () => {\r\n  const { cid, cno } = useParams();\r\n  const [questionList, setQuestionList] = useState([]);\r\n  const [questionText, setQuestionText] = useState(\"\");\r\n  const [selectedQuestionNo, setSelectedQuestionNo] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [nextQuestionNo, setNextQuestionNo] = useState(1);\r\n\r\n  /** ✅ โหลดรายการคำถามแบบ Realtime */\r\n  useEffect(() => {\r\n    if (!cid || !cno) return;\r\n\r\n    const questionRef = collection(db, \"classroom\", cid, \"checkin\", cno, \"questions\");\r\n    const unsubscribe = onSnapshot(questionRef, (snapshot) => {\r\n      const questions = snapshot.docs.map(doc => ({\r\n        question_no: Number(doc.id),\r\n        ...doc.data(),\r\n      })).sort((a, b) => a.question_no - b.question_no);\r\n\r\n      setQuestionList(questions);\r\n      setNextQuestionNo(questions.length > 0 ? questions[questions.length - 1].question_no + 1 : 1);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [cid, cno]);\r\n\r\n  /** ✅ โหลดคำตอบแบบ Realtime เมื่อเลือกคำถาม */\r\n  useEffect(() => {\r\n    if (!cid || !cno || !selectedQuestionNo) {\r\n      setAnswers([]);\r\n      return;\r\n    }\r\n\r\n    const answersRef = collection(db, \"classroom\", cid, \"checkin\", cno, \"questions\", String(selectedQuestionNo), \"answers\");\r\n    const unsubscribe = onSnapshot(answersRef, (snapshot) => {\r\n      setAnswers(snapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        return {\r\n          id: doc.id,\r\n          stdid: data.stdid,\r\n          student_name: data.student_name,\r\n          text: data.text,\r\n          time: data.time?.toDate ? data.time.toDate().toLocaleString() : \"ไม่มีข้อมูลเวลา\", // ✅ แปลง Timestamp เป็น String\r\n        };\r\n      }));\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [cid, cno, selectedQuestionNo]);\r\n\r\n  /** ✅ เพิ่มคำถามใหม่ */\r\n  const handleCreateQuestion = async () => {\r\n    if (!questionText.trim()) {\r\n      alert(\"กรุณากรอกข้อความคำถาม\");\r\n      return;\r\n    }\r\n\r\n    const questionRef = doc(db, \"classroom\", cid, \"checkin\", cno, \"questions\", String(nextQuestionNo));\r\n\r\n    try {\r\n      await setDoc(questionRef, {\r\n        question_no: nextQuestionNo,\r\n        question_text: questionText,\r\n        question_show: false,\r\n      });\r\n\r\n      alert(`✅ เพิ่มคำถามข้อที่ ${nextQuestionNo} สำเร็จ!`);\r\n      setQuestionText(\"\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error creating question:\", error);\r\n      alert(\"❌ เกิดข้อผิดพลาดในการเพิ่มคำถาม\");\r\n    }\r\n  };\r\n\r\n  /** ✅ เปิด-ปิดคำถาม */\r\n  const handleToggleQuestion = async (qno, isShowing) => {\r\n    const questionRef = doc(db, \"classroom\", cid, \"checkin\", cno, \"questions\", String(qno));\r\n\r\n    try {\r\n      await updateDoc(questionRef, { question_show: !isShowing });\r\n      alert(`✅ ${!isShowing ? \"เริ่มถาม\" : \"ปิดคำถาม\"} ข้อที่ ${qno} สำเร็จ!`);\r\n    } catch (error) {\r\n      console.error(\"❌ Error toggling question:\", error);\r\n      alert(\"❌ เกิดข้อผิดพลาดในการเปลี่ยนสถานะคำถาม\");\r\n    }\r\n  };\r\n\r\n  /** ✅ ลบคำถามพร้อมคำตอบ */\r\n  const handleDeleteQuestion = async (qno) => {\r\n    if (window.confirm(`คุณแน่ใจหรือไม่ว่าต้องการลบคำถามข้อที่ ${qno} และคำตอบทั้งหมด?`)) {\r\n      const questionRef = doc(db, \"classroom\", cid, \"checkin\", cno, \"questions\", String(qno));\r\n\r\n      try {\r\n        // ✅ ลบคำตอบทั้งหมดของคำถามนี้\r\n        const answersRef = collection(db, \"classroom\", cid, \"checkin\", cno, \"questions\", String(qno), \"answers\");\r\n        const answersSnapshot = await getDocs(answersRef);\r\n        answersSnapshot.forEach(async (doc) => {\r\n          await deleteDoc(doc.ref);\r\n        });\r\n\r\n        // ✅ ลบคำถาม\r\n        await deleteDoc(questionRef);\r\n        alert(`✅ ลบคำถามข้อที่ ${qno} และคำตอบทั้งหมดสำเร็จ!`);\r\n        if (selectedQuestionNo === qno) setSelectedQuestionNo(null);\r\n      } catch (error) {\r\n        console.error(\"❌ Error deleting question:\", error);\r\n        alert(\"❌ เกิดข้อผิดพลาดในการลบคำถาม\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-container\">\r\n      <h1 className=\"question-title\">หน้าถาม-ตอบ</h1>\r\n\r\n      <div className=\"question-form\">\r\n        <h2 className=\"form-title\">เพิ่มคำถามใหม่</h2>\r\n        <p>หมายเลขคำถามถัดไป: <strong>{nextQuestionNo}</strong></p>\r\n        <input\r\n          type=\"text\"\r\n          value={questionText}\r\n          onChange={(e) => setQuestionText(e.target.value)}\r\n          className=\"input-field\"\r\n          placeholder=\"พิมพ์คำถาม\"\r\n        />\r\n        <button onClick={handleCreateQuestion} className=\"btn-create\">เพิ่มคำถาม</button>\r\n      </div>\r\n\r\n      <h2 className=\"question-list-title\">รายการคำถาม</h2>\r\n      <ul className=\"question-list\">\r\n        {questionList.map((q) => (\r\n          <li key={q.question_no} className=\"question-item\">\r\n            <span onClick={() => setSelectedQuestionNo(selectedQuestionNo === q.question_no ? null : q.question_no)}>\r\n              {q.question_no}. {q.question_text}\r\n            </span>\r\n            <div className=\"question-actions\">\r\n              <button onClick={() => handleToggleQuestion(q.question_no, q.question_show)}\r\n                className={q.question_show ? \"btn-close\" : \"btn-create\"}>\r\n                {q.question_show ? \"ปิดคำถาม\" : \"เริ่มถาม\"}\r\n              </button>\r\n              <button onClick={() => handleDeleteQuestion(q.question_no)} className=\"btn-delete\">\r\n                ลบคำถาม\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {selectedQuestionNo && (\r\n        <div className=\"answer-container\">\r\n          <h2 className=\"answer-title\">คำตอบของคำถามที่ {selectedQuestionNo}</h2>\r\n          <ul className=\"answer-list\">\r\n            {answers.length > 0 ? (\r\n              answers.map((answer, index) => (\r\n                <li key={index} className=\"answer-item\">\r\n                  <strong>{answer.stdid} - {answer.student_name}:</strong> {answer.text} \r\n                  <span className=\"text-gray-500\"> ({answer.time})</span>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p>ยังไม่มีคำตอบ</p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { doc, collection, getDoc, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from \"../services/firebase\";\r\nimport \"../styles/CheckinDetail.css\";\r\n\r\nconst CheckinDetail = () => {\r\n  const { cid, cno } = useParams();\r\n  const navigate = useNavigate();\r\n  const [checkinInfo, setCheckinInfo] = useState(null);\r\n  const [students, setStudents] = useState([]);\r\n\r\n  /** โหลดข้อมูลการเช็คชื่อ */\r\n  useEffect(() => {\r\n    if (!cid || !cno) return;\r\n\r\n    const fetchCheckinData = async () => {\r\n      try {\r\n        const checkinRef = doc(db, \"classroom\", cid, \"checkin\", cno);\r\n        const checkinSnap = await getDoc(checkinRef);\r\n\r\n        if (checkinSnap.exists()) {\r\n          setCheckinInfo(checkinSnap.data());\r\n        } else {\r\n          console.error(\"❌ ไม่พบข้อมูลรอบเช็คชื่อ\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ เกิดข้อผิดพลาดในการดึงข้อมูล:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCheckinData();\r\n  }, [cid, cno]);\r\n\r\n  /** โหลดรายชื่อนักเรียนที่เช็คชื่อแบบ Realtime */\r\n  useEffect(() => {\r\n    if (!cid || !cno) return;\r\n\r\n    const studentsRef = collection(db, \"classroom\", cid, \"checkin\", cno, \"students\");\r\n    const unsubscribeStudents = onSnapshot(studentsRef, (snapshot) => {\r\n      setStudents(snapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        return {\r\n          id: doc.id,\r\n          name: data.name,\r\n          stdid: data.stdid,\r\n          checkinTime: data.checkinTime?.toDate ? data.checkinTime.toDate().toLocaleString() : \"ไม่มีข้อมูลเวลา\" // ✅ แปลง Timestamp\r\n        };\r\n      }));\r\n    });\r\n\r\n    return () => unsubscribeStudents();\r\n  }, [cid, cno]);\r\n\r\n  return (\r\n    <div className=\"checkin-detail-container\">\r\n      <h1 className=\"checkin-title\">รายละเอียดการเช็คชื่อ</h1>\r\n\r\n      {checkinInfo ? (\r\n        <div className=\"checkin-card\">\r\n          <div className=\"checkin-header\">\r\n            <p>เช็คชื่อรอบที่ {cno} วันที่ {new Date(checkinInfo.date).toLocaleDateString()} \r\n            เวลา {new Date(checkinInfo.date).toLocaleTimeString()}</p>\r\n          </div>\r\n          <div className=\"checkin-body\">\r\n            <div className=\"checkin-status\">\r\n              <span className={`status-label ${checkinInfo.status === \"open\" ? \"status-open\" : \"status-closed\"}`}>\r\n                {checkinInfo.status === \"open\" ? \"เปิดอยู่\" : \"ปิดแล้ว\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>กำลังโหลดข้อมูล...</p>\r\n      )}\r\n\r\n      <h2 className=\"student-list-title\">รายชื่อนักเรียนที่เช็คชื่อ</h2>\r\n      <div className=\"student-list-container\">\r\n        {students.length > 0 ? (\r\n          students.map((student, index) => (\r\n            <div key={student.id} className=\"student-item\">\r\n              <p>{index + 1}. {student.stdid} - {student.name}</p>\r\n              <span className=\"checkin-time\">เช็คชื่อเมื่อ: {student.checkinTime}</span>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"no-student-text\">ยังไม่มีนักเรียนที่เช็คชื่อ</p>\r\n        )}\r\n      </div>\r\n\r\n      <button onClick={() => navigate(-1)} className=\"btn btn-back\">ย้อนกลับ</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckinDetail;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Classroom from \"./pages/Classroom\";\r\nimport Checkin from \"./pages/Checkin\";\r\nimport Login from \"./pages/Login\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Question from \"./pages/Question\"; // ✅ Import หน้า Question\r\nimport CheckinDetail from \"./pages/CheckinDetail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/dashboard\" element={<Dashboard />} />\r\n        <Route path=\"/profile\" element={<Profile />} />\r\n\r\n        <Route path=\"/classroom/:cid\" element={<Classroom />} />\r\n\r\n        {/* ✅ Route สำหรับหน้า Check-in และรายละเอียด Check-in */}\r\n        <Route path=\"/classroom/:cid/checkin\" element={<Checkin />} />\r\n        <Route path=\"/classroom/:cid/checkin/:cno\" element={<CheckinDetail />} />\r\n\r\n        {/* ✅ Route ใหม่สำหรับหน้าถาม-ตอบของแต่ละรอบเช็คชื่อ */}\r\n        <Route path=\"/classroom/:cid/checkin/:cno/question\" element={<Question />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}